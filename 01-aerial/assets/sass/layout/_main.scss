@charset "UTF-8";

@mixin bg($width) {
  /* animation */
  @include keyframes('bg') {
    0% {
      // vendor传入属性，返回值
      @include vendor('transform', 'translate3d(0,0,0)');
    }

    100% {
      // 背景无限动画,向左移动
      @include vendor('transform', 'translate3d(#{$width * -1},0,0)');
    }
  }

  #bg {
    // 背景宽度拉伸了3倍，能造成无限连接感觉
    width: ($width * 3);
    background-size: $width auto;
  }
}

/* bg animation */
// 背景宽度拉伸了1.5倍
// _misc处理带有单位 字符
@include bg(_misc(bg-width) * 1.5);

/* define wrapper animation */
@include keyframes('wrapper') {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

/* define overlay animation */
@include keyframes('overlay') {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

/* define Header animation */
@include keyframes('header') {
  0% {
    // 向上动画
    @include vendor('transform', 'translate3d(0,1em,0)');
    opacity: 0;
  }

  100% {
    @include vendor('transform', 'translate3d(0,0,0)');
    opacity: 1;
  }
}

/* nav-icons animation */
@include keyframes('nav-icons') {
  0% {
    // 向上动画
    @include vendor('transform', 'translate3d(0,1em,0)');
    opacity: 0;
  }

  100% {
    @include vendor('transform', 'translate3d(0,0,0)');
    opacity: 1;
  }
}

/* wrapper animation */
#wrapper {
  // animation: name duration timing-function delay iteration-count direction;
  @include vendor('animation', 'wrapper #{_duration(wrapper)} forwards');
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
}

#bg {
  // animation: name duration timing-function delay iteration-count direction;
  @include vendor('animation', 'bg #{_duration(bg)} linear infinite');
  // backface-visibility当元素不面向屏幕时,是否可见。
  @include vendor('backface-visibility', 'hidden');
  @include vendor('transform', 'translate3d(0,0,0)');
  position: fixed;
  left: 0;
  top: 0;
  height: 100%;
  // _misc处理带有单位字符
  background: _misc(bg) repeat-x;
  opacity: 1;
}

#overlay {
  @include vendor('animation', 'overlay #{_duration(overlay)} #{$delay-overlay} forwards');
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  background-attachment: fixed, fixed;
  background-image: url('../images/overlay-pattern.png'), url('../images/overlay.svg');
  background-position: 0% 0%, 50% 50%;
  background-repeat: repeat, no-repeat;
  background-size: auto, cover;
}

/* .main */
#main {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  text-align: center;

  &:before {
    display: inline-block;
    height: 100%;
    // 垂直居中-父元素高度确定的单行文本
    vertical-align: middle;
    content: '';
  }
}

@include breakpoint(xlarge) {
  body, input, select, textarea {
    font-size: 13pt;
  }

  @include bg(_misc(bg-width));
}

@include breakpoint(large) {
  body, input, select, textarea {
    //12PT就是12磅 12磅就是小4号字
    font-size: 12pt;
  }

  @include bg(_misc(bg-width) * 0.5);
}

@include breakpoint(small) {
  body {
    min-width: 320px;
  }

  body, input, select, textarea {
    font-size: 11pt;
  }

  @include bg(_misc(bg-width) * 0.2);

  #header {
    h1 {
      font-size: 2.5em;
    }

    p {
      font-size: 1em;
    }

    nav {
      font-size: 1em;

      a {
        &:hover {
          font-size: 1em;
        }

        &:active {
          font-size: 1em;
        }
      }
    }
  }
}

@include breakpoint(xsmall) {
  @include bg(_misc(bg-width) * 0.275);

  #header {
    nav {
      padding: 0 1em;
    }
  }
}